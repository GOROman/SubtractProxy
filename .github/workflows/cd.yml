name: CD

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Node.jsのセットアップ
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: 依存関係のインストール
      run: npm ci
    
    - name: セキュリティ脆弱性スキャン
      run: npm audit --production
      
    - name: ビルド
      run: npm run build
      
    - name: 負荷テスト
      run: npm run test:load
      continue-on-error: true
    
    - name: デプロイ準備
      run: |
        mkdir -p dist
        cp package.json dist/
        cp package-lock.json dist/
        cp config.example.json dist/config.json
        # バージョン情報を記録
        echo "VERSION=$(date +'%Y%m%d%H%M%S')-$(git rev-parse --short HEAD)" > dist/version.txt
        cat dist/version.txt
    
    # ブルーグリーンデプロイのシミュレーション
    - name: ブルーグリーンデプロイ
      run: |
        echo "新環境の準備中..."
        # 実際のデプロイでは、ここで新しい環境を準備します
        sleep 2
        
        echo "新環境にデプロイ中..."
        # 実際のデプロイでは、ここで新しい環境にデプロイします
        sleep 2
        
        echo "ヘルスチェック中..."
        # 実際のデプロイでは、ここで新しい環境のヘルスチェックを行います
        sleep 2
        
        echo "トラフィック切り替え中..."
        # 実際のデプロイでは、ここでトラフィックを新しい環境に切り替えます
        sleep 2
        
        echo "デプロイ完了"
    
    - name: ロールバック手順の準備
      run: |
        echo "ロールバック手順を準備中..."
        # 実際のデプロイでは、ここでロールバック手順を準備します
        mkdir -p rollback
        echo "ROLLBACK_VERSION=$(cat dist/version.txt | cut -d'=' -f2)" > rollback/info.txt
        echo "ロールバック情報: $(cat rollback/info.txt)"
    
    - name: デプロイ完了通知
      run: echo "デプロイが完了しました"
      
    - name: 監視設定の更新
      run: |
        echo "監視設定を更新中..."
        # 実際のデプロイでは、ここで監視設定を更新します
        echo "エラー発生率のアラートを設定"
        echo "タイムアウト発生频度の監視を設定"
        echo "レスポンスタイムの監視を設定"

  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Node.jsのセットアップ
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: 依存関係のインストール
      run: npm ci
    
    - name: コードのリント
      run: npm run lint
      
    - name: ビルド
      run: npm run build
      
    - name: テスト実行
      run: npm test -- --passWithNoTests
